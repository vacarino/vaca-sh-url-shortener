# =============================================================================
# Vaca.Sh Laravel URL Shortener - Nginx Virtual Host Configuration
# Domain: vaca.sh
# =============================================================================

server {
    listen 80;
    listen [::]:80;
    server_name vaca.sh www.vaca.sh;
    root /var/www/vaca.sh/public;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Index file
    index index.php;

    # Character set
    charset utf-8;

    # Main location block
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Handle favicon and robots.txt
    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    location = /robots.txt  { 
        access_log off; 
        log_not_found off; 
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Error page handling
    error_page 404 /index.php;

    # PHP handling
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        
        # Security
        fastcgi_param HTTP_PROXY "";
        
        # Performance
        fastcgi_buffering on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 60s;
        fastcgi_read_timeout 60s;
    }

    # Deny access to hidden files and directories
    location ~ /\.(?!well-known).* {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Static asset optimization
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Optional: Enable WebP conversion (requires mod_rewrite equivalent)
        location ~* \.(jpe?g|png)$ {
            add_header Vary Accept;
            try_files $uri$webp_suffix $uri =404;
        }
    }

    # CSS and JavaScript
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # Enable Gzip compression for these files
        gzip_static on;
    }

    # Font files
    location ~* \.(ttf|ttc|otf|eot|woff|woff2)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        
        # CORS for font files
        add_header Access-Control-Allow-Origin "*";
    }

    # Document files
    location ~* \.(pdf|doc|docx|xls|xlsx|ppt|pptx)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Archive files
    location ~* \.(zip|tar|gz|bz2|rar)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to Laravel specific files
    location ~ /\.(htaccess|htpasswd|env) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to composer files
    location ~ /(composer\.(json|lock)|package\.(json|lock)|yarn\.lock) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to version control
    location ~ /\.(git|svn|hg) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Deny access to backup files
    location ~ \.(bak|backup|old|orig|original|tmp|temp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Rate limiting for login/admin areas (uncomment if needed)
    # location ~ ^/(admin|login) {
    #     limit_req zone=login burst=10 nodelay;
    #     try_files $uri $uri/ /index.php?$query_string;
    # }

    # Security: Deny access to storage and vendor directories
    location ~ ^/(storage|vendor)/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Allow Well-Known URIs (for SSL certificates)
    location ^~ /.well-known/ {
        allow all;
        auth_basic off;
    }

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    client_max_body_size 64M;
    large_client_header_buffers 4 4k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Hide Nginx version
    server_tokens off;

    # Custom error pages (optional - create these files in public/)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/vaca.sh/public;
        internal;
    }

    # Log files
    access_log /var/log/nginx/vaca.sh-access.log;
    error_log /var/log/nginx/vaca.sh-error.log;
}

# =============================================================================
# HTTPS Configuration (Auto-configured by Certbot)
# The following block will be automatically added by Certbot when SSL is installed
# =============================================================================

# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name vaca.sh www.vaca.sh;
#     
#     # SSL configuration (managed by Certbot)
#     ssl_certificate /etc/letsencrypt/live/vaca.sh/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/vaca.sh/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#     
#     # HSTS (HTTP Strict Transport Security)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # All other configuration same as HTTP block above...
# }

# Redirect www to non-www (uncomment if preferred)
# server {
#     listen 80;
#     listen [::]:80;
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name www.vaca.sh;
#     return 301 https://vaca.sh$request_uri;
# } 